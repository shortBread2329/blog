<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on むーさんDiary</title>
    <link>https://shortbread2329.github.io/blog/post/</link>
    <description>Recent content in Posts on むーさんDiary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 31 Jul 2021 21:58:40 +0900</lastBuildDate><atom:link href="https://shortbread2329.github.io/blog/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>pythonで自作関数をモジュール化・パッケージ化</title>
      <link>https://shortbread2329.github.io/blog/p/python%E3%81%A7%E8%87%AA%E4%BD%9C%E9%96%A2%E6%95%B0%E3%82%92%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E5%8C%96%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E5%8C%96/</link>
      <pubDate>Sat, 31 Jul 2021 21:58:40 +0900</pubDate>
      
      <guid>https://shortbread2329.github.io/blog/p/python%E3%81%A7%E8%87%AA%E4%BD%9C%E9%96%A2%E6%95%B0%E3%82%92%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E5%8C%96%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E5%8C%96/</guid>
      <description>pythonで自作関数をモジュール化・パッケージ化 私がTwitterAPIを叩く処理を実装していた際にライブラリ化したくなったのでまとめてみます。
前提条件  Python 3.0以上  構成ディレクトリ 以下のようなフォルダとファイルを作成していきます。
./mylibrary --- /mylibrary ---/__init__.py file1.py file2.py --- /setup.py   mylibraryフォルダ
ライブラリ化したいソースをここに配置していきます。
  _init_.py
from .file1 import class1 from .file2 import class2 from .file3 import *   setup.py
インストール時の構成を記述するファイルです。
setup.pyの書き方は、本来はもっといろいろと書くべきのようですが、
今回は公開することを考えず最小限で行きます。
  from setuptools import setup setup( install_requires=[], entry_points={ &amp;#34;console_scripts&amp;#34;:[ &amp;#34;myapp = test:ggg&amp;#34; ] } )  install_requires  importしている依存ライブラリをリストで羅列する &amp;ldquo;sys&amp;quot;など標準ライブラリを書くとエラーになる    完成したライブラリのインストール あとはライブラリをインストールするだけです.
python setup.py install お疲れ様でした!</description>
    </item>
    
    <item>
      <title>ローカルのみのGitリポジトリをつくろう</title>
      <link>https://shortbread2329.github.io/blog/p/%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%AE%E3%81%BF%E3%81%AEgit%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8D%E3%81%86/</link>
      <pubDate>Sun, 18 Jul 2021 00:10:06 +0900</pubDate>
      
      <guid>https://shortbread2329.github.io/blog/p/%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%AE%E3%81%BF%E3%81%AEgit%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8D%E3%81%86/</guid>
      <description>ソース管理をするといえばGitとGithubが主流なのかなというご時世ですが、
そもそもソースを管理できればいいだけで公開する必要はない時もあるかと思います。
そんな時に実は簡単にできるので是非活用してみてください。
 リモートリポジトリを作成する(ローカル環境で) mkdir .git cd .git git init --bare --shared オプションの解説
–bare：カレントディレクトリ配下のソースをリモートリポジトリにする。
–share：このリポジトリを共有可能にする。
​</description>
    </item>
    
    <item>
      <title>Windowsで異なるバージョンのRubyを使いたい</title>
      <link>https://shortbread2329.github.io/blog/p/windows%E3%81%A7%E7%95%B0%E3%81%AA%E3%82%8B%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%AEruby%E3%82%92%E4%BD%BF%E3%81%84%E3%81%9F%E3%81%84/</link>
      <pubDate>Sun, 04 Jul 2021 00:10:04 +0900</pubDate>
      
      <guid>https://shortbread2329.github.io/blog/p/windows%E3%81%A7%E7%95%B0%E3%81%AA%E3%82%8B%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%AEruby%E3%82%92%E4%BD%BF%E3%81%84%E3%81%9F%E3%81%84/</guid>
      <description>普段は最新のRubyを使っているけど、
Ruby on Railsなど環境によっては古いバージョンを使い分けたいときに。
 環境  windows10 Ruby 2.6.3 2.7.3 uru 0.8.5   uru公式サイト: https://bitbucket.org/jonforums/uru/wiki/Home  uruを導入する uru の準備   使い分けたいバージョンのRubyをインストール
 メインで使う方のバージョン(ここでは2.6)のみパスを通すと便利 先に2.7のパスを通していた場合は環境変数を編集  参考: Qiita - Windows10で実行ファイルへのパスを通す手順      uru
をダウンロードページからDL
 DLリンク: https://bitbucket.org/jonforums/uru/wiki/Downloads uru-0.x.x-windows-x86 をクリック    DLされた uru-0.x.x-windows-x86.7z を解凍
  uru_rt.exeを適当なフォルダに移動
 ここでは C:\Program Files\uru に移動    コマンドラインで uru を使うため、移動した先へのパスを通す
  コマンドラインで下記を実行
$ uru_rt admin install ---&amp;gt; Installing uru into C:\Program Files\uru   同じフォルダに uru.</description>
    </item>
    
    <item>
      <title>ローストポーク</title>
      <link>https://shortbread2329.github.io/blog/p/%E3%83%AD%E3%83%BC%E3%82%B9%E3%83%88%E3%83%9D%E3%83%BC%E3%82%AF/</link>
      <pubDate>Fri, 02 Jul 2021 00:10:12 +0900</pubDate>
      
      <guid>https://shortbread2329.github.io/blog/p/%E3%83%AD%E3%83%BC%E3%82%B9%E3%83%88%E3%83%9D%E3%83%BC%E3%82%AF/</guid>
      <description>暑くなってきましたが、サラダでもいただけて、
比較的ローストビーフよりお安くさっぱりいただける
ローストポークを作ってみてはいかがでしょうか！？
作り方 まずジップロックに以下材料を入れ漬け込みます。 空気を抜いて閉めます。
材料
 豚ブロック肉　目安400g前後 粗塩　気持ち多め 砂糖　大匙2 ローズマリーみじん切り　適量  機材
 ジップロック  低温調理器にお水を張り、65度で2時間調理します。 機材
  電気圧力鍋
(今回はこちらを使用しました。https://www.t-fal.co.jp/products/electric-pressurecookers/manual-cooking/lakulacookercompact/)
  まな板ので薄くスライスし、お好みでドレッシングや野菜を添えて完成です。 材料
 玉ねぎドレッシング 市販の大根サラダ  </description>
    </item>
    
    <item>
      <title>AWSでWebサーバーを立てよう</title>
      <link>https://shortbread2329.github.io/blog/p/aws%E3%81%A7web%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%82%92%E7%AB%8B%E3%81%A6%E3%82%88%E3%81%86/</link>
      <pubDate>Fri, 25 Jun 2021 08:23:29 +0900</pubDate>
      
      <guid>https://shortbread2329.github.io/blog/p/aws%E3%81%A7web%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%82%92%E7%AB%8B%E3%81%A6%E3%82%88%E3%81%86/</guid>
      <description>今ポートフォリオを作成しているんですけど、
EC2でWebサーバーを立ててきました。
その時のメモを記事にします。
EC2とは AWSのサービスの1つで、「EC2（Amazon Elastic Compute Cloud）」は、AWSが提供する仮想サーバーです。読みは「イーシーツー」でいいみたいです。
EC2は無料枠があります。
EC2でWebサーバーを作成する それでは、実際にEC2でWebサーバーを作って試してみましょう。 以下の手順で行います。
 EC2インスタンスを作成する EC2にログインする EC2インスタンスの環境構築 サーバーに「Nginx」をインストールする ブラウザからWebサーバーにアクセスする Nginx用のHTMLを作成する サーバーを停止する  EC2インスタンスを作成する AWSにアクセスし、マネジメントコンソールのサービス検索で「EC2」を検索
image-20210625085046607
【注意】
サインアップが完了してから利用できるようになるまで、24時間ほどかかる場合があります。 この場合、「サービスへのお申し込みはあと少しで完了です！」画面が表示されます。 「AWSへの登録を完了してください」をクリックして登録を完了し、「クレジットカード情報」をクリックして情報を確認しておきましょう。
EC2にアクセスされると、「EC2ダッシュボード」画面が表示されます。 左下の「インスタンスを起動」をクリックします。
image-20210625085131485
Amazon マシンイメージにはAmazon Linux 2 AMIを選択します。
image-20210625085202185
「2. インスタンスタイプの選択」画面が表示されます。
「6.セキュリティグループの設定」をクリックします。
image-20210625085350142
「6. セキュリティグループの設定」画面が表示されます。
左下の「ルールの追加」をクリックします。
image-20210625085451347
「ルールの追加」をクリックすると、その下に行が追加されます。
追加行の「タイプ」で「カスタムTCP」をクリックし、表示されるメニューで「HTTP」を選択します。
設定できたら、右下の「確認と作成」をクリックします。
image-20210625085620944
「7. 確認」画面が表示されます。 正しく設定されていることを確認し、よければ右下の「起動」をクリックします。
image-20210625085643864
「既存のキーペアを作成するか、新しいキーペアを作成します」画面が表示されます。
「既存のキーペアの選択」のメニューで「新しいキーペアを作成」を選択し直します。
「キーペア名」欄に好きなキーの名前入力し、右下の「キーペアのダウンロード」をクリックします。</description>
    </item>
    
    <item>
      <title>スタバでキッシュを食べた</title>
      <link>https://shortbread2329.github.io/blog/p/%E3%82%B9%E3%82%BF%E3%83%90%E3%81%A7%E3%82%AD%E3%83%83%E3%82%B7%E3%83%A5%E3%82%92%E9%A3%9F%E3%81%B9%E3%81%9F/</link>
      <pubDate>Tue, 22 Jun 2021 15:42:56 +0900</pubDate>
      
      <guid>https://shortbread2329.github.io/blog/p/%E3%82%B9%E3%82%BF%E3%83%90%E3%81%A7%E3%82%AD%E3%83%83%E3%82%B7%E3%83%A5%E3%82%92%E9%A3%9F%E3%81%B9%E3%81%9F/</guid>
      <description>キッシュを何度か作ったんですけど、
卵の独特の後味？がしてしまい苦手かもしれないと思っていました。
これは私が正解を知らずに作ったのが間違え！だと思い、
スタバで作業するついでにキッシュを頼んでみました。
 食レポ 卵の独特の後味がありません！
とっても具沢山ですね。サイコロ上のベーコンとポテトとほうれん草をすごく感じました。
ちょっとホワイトソースっぽいなあと感じて後で調べたらどうやらクリームチーズが使われているとこが特徴の一つみたいですね。
今度自宅で再現に挑戦してみますので是非ご期待ください！
 リンク https://product.starbucks.co.jp/food/others/4524785438460/</description>
    </item>
    
    <item>
      <title>Typora_マークダウンエディタ</title>
      <link>https://shortbread2329.github.io/blog/p/typora_%E3%83%9E%E3%83%BC%E3%82%AF%E3%83%80%E3%82%A6%E3%83%B3%E3%82%A8%E3%83%87%E3%82%A3%E3%82%BF/</link>
      <pubDate>Tue, 22 Jun 2021 09:58:59 +0900</pubDate>
      
      <guid>https://shortbread2329.github.io/blog/p/typora_%E3%83%9E%E3%83%BC%E3%82%AF%E3%83%80%E3%82%A6%E3%83%B3%E3%82%A8%E3%83%87%E3%82%A3%E3%82%BF/</guid>
      <description>今回は無料の強力なMarkdowエディタ「Typora」について記事にします。
TyporaはMarkdownエディタとして比較的敷居も低く、便利機能もたくさん存在するため、
初心者から上級者までお勧めができるエディタです。
 Typoraの特徴  Win、Mac、Linuxで導入可能。 Typoraは常時シームレスにプレビューが可能なので、どのような表示になるのか確認しながら直感的に記述をすることが可能。 画像をドラックアンドドロップで楽々挿入 簡単なシーケンス図を作成可能。   環境要件 TyporaはWindows,Mac,Linux環境で動作します。
詳しくはインストールの手順中リンクを参照してください。
 インストール https://typora.io
 使い心地 このブログ記事もTyporaで書いてます。
image-20210622104125318
なによりプレビュー画面と編集画面が一つでよい点が
本当に使い心地よいです！！
皆さんもぜひ使ってみてください。</description>
    </item>
    
    <item>
      <title>ラピュタ風トースト</title>
      <link>https://shortbread2329.github.io/blog/p/%E3%83%A9%E3%83%94%E3%83%A5%E3%82%BF%E9%A2%A8%E3%83%88%E3%83%BC%E3%82%B9%E3%83%88/</link>
      <pubDate>Sat, 19 Jun 2021 00:14:59 +0900</pubDate>
      
      <guid>https://shortbread2329.github.io/blog/p/%E3%83%A9%E3%83%94%E3%83%A5%E3%82%BF%E9%A2%A8%E3%83%88%E3%83%BC%E3%82%B9%E3%83%88/</guid>
      <description>朝簡単に作れる朝食です。
オーブンのみなので洗い物が少ないです！
ラピュタ風トースト   食パンにトッピングを載せる。 食パンをくぼませる。
マヨネーズを食パンの淵にかけ、卵が落ちないようにする。
卵を割り、塩コショウをかける。
 食パン　1枚 マヨネーズ　適量 卵　1個 塩コショウ　このみ    オーブン250度で12分焼きます。
  完成！ 2021-06-19-07-24-01-612
※写真は余ってたピザソースとパセリを追加トッピングしています。
反省点 どろどろ半熟の状態で、黄身が流れてしまうので、
焼き加減を改善したいなと思ってます。
またレシピが改善したら投稿しますのでぜひご期待ください！</description>
    </item>
    
    <item>
      <title>Pythonスクリプトに自動でブログ記事を書いてもらう。</title>
      <link>https://shortbread2329.github.io/blog/p/python%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%AB%E8%87%AA%E5%8B%95%E3%81%A7%E3%83%96%E3%83%AD%E3%82%B0%E8%A8%98%E4%BA%8B%E3%82%92%E6%9B%B8%E3%81%84%E3%81%A6%E3%82%82%E3%82%89%E3%81%86/</link>
      <pubDate>Mon, 14 Jun 2021 07:31:57 +0900</pubDate>
      
      <guid>https://shortbread2329.github.io/blog/p/python%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%AB%E8%87%AA%E5%8B%95%E3%81%A7%E3%83%96%E3%83%AD%E3%82%B0%E8%A8%98%E4%BA%8B%E3%82%92%E6%9B%B8%E3%81%84%E3%81%A6%E3%82%82%E3%82%89%E3%81%86/</guid>
      <description>ブログを始めて1週間が経過しようとしてます。
正直1週間は毎日投稿したい気持ちでしたが、
飽き症な私にとって毎日投稿は難しかったみたいです。
そんなあるとき私が買っている投資信託の状況を確認していたのですが、
これを元にブログ記事を誰か書いてくれていたらなあ～
あ、できるかも？と思って今回挑戦してみます。
まずやることは、
 HugoでのBlog環境構築 pythonでデータ分析し、マークダウン形式で出力する。 タスクスケジュールを行う  の3つです。頑張る箇所は「pythonでデータ分析し、マークダウン形式で出力する。」ですね。</description>
    </item>
    
    <item>
      <title>スマホの写真をあさって記憶を頼りにレシピを投稿してみる_ミートソース編</title>
      <link>https://shortbread2329.github.io/blog/p/%E3%82%B9%E3%83%9E%E3%83%9B%E3%81%AE%E5%86%99%E7%9C%9F%E3%82%92%E3%81%82%E3%81%95%E3%81%A3%E3%81%A6%E8%A8%98%E6%86%B6%E3%82%92%E9%A0%BC%E3%82%8A%E3%81%AB%E3%83%AC%E3%82%B7%E3%83%94%E3%82%92%E6%8A%95%E7%A8%BF%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B_%E3%83%9F%E3%83%BC%E3%83%88%E3%82%BD%E3%83%BC%E3%82%B9%E7%B7%A8/</link>
      <pubDate>Sun, 06 Jun 2021 00:07:29 +0900</pubDate>
      
      <guid>https://shortbread2329.github.io/blog/p/%E3%82%B9%E3%83%9E%E3%83%9B%E3%81%AE%E5%86%99%E7%9C%9F%E3%82%92%E3%81%82%E3%81%95%E3%81%A3%E3%81%A6%E8%A8%98%E6%86%B6%E3%82%92%E9%A0%BC%E3%82%8A%E3%81%AB%E3%83%AC%E3%82%B7%E3%83%94%E3%82%92%E6%8A%95%E7%A8%BF%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B_%E3%83%9F%E3%83%BC%E3%83%88%E3%82%BD%E3%83%BC%E3%82%B9%E7%B7%A8/</guid>
      <description>そろそろ料理記事を投稿したかったのに、
今日のランチは残り物をさらえてしまったので、
スマホをあさっていたら見つけた。
手作りミートソース  まず以下の材料をみじん切りって下ごしらえておきます。   セロリ　1本 玉ねぎ　半分 なにかしらキノコ(確かこれはエリンギ)　エリンギで1~2本   フライパンにバターを広げ熱し、強火で玉ねぎを入れます。
しんなりしたかな(適当)ぐらいで、
セロリと以下材料をぶちこんで火を通します。
お肉に火が通っていたら次に行きます。
   合いびき肉　こぶし2個分ぐらい？たぶん200g   以下の材料をぶちこみます。
ぶち込み終わったら中火ぐらいにして再沸騰するまで待ちます。
私はそういえば電気圧力鍋で加圧8分で行った気がしてきました。
   トマト缶　1缶 ニンニクチューブ　人差し指の長さぐらい 中濃ソース　大匙１　個人的にカゴメがおすすめ ケチャップ　大匙2 赤ワイン　コップ4分の1ぐらいだぼ×3ぐらい　安いやつでいい 砂糖　大匙1(安い赤ワインの場合は必須) ローリエ(ローレル???)　1枚   ローリエだかローレルだかを取り出し、
仕上げに以下を入れて味見をして塩コショウを調整して完成。
   ミックスビーンズ(あれば	1パック 塩コショウ　気分(3振りぐらい 一味　適量  完成はこんな感じ。 2021-06-06-15-44-08-647
もしも電気圧力鍋をお持ちであれば、
すべての材料を電気圧力鍋にぶち込んで加圧8分をすると、
簡単にできます。</description>
    </item>
    
    <item>
      <title>ちょっと遅いけど自己紹介とこれから</title>
      <link>https://shortbread2329.github.io/blog/p/%E3%81%A1%E3%82%87%E3%81%A3%E3%81%A8%E9%81%85%E3%81%84%E3%81%91%E3%81%A9%E8%87%AA%E5%B7%B1%E7%B4%B9%E4%BB%8B%E3%81%A8%E3%81%93%E3%82%8C%E3%81%8B%E3%82%89/</link>
      <pubDate>Sat, 05 Jun 2021 20:55:04 +0900</pubDate>
      
      <guid>https://shortbread2329.github.io/blog/p/%E3%81%A1%E3%82%87%E3%81%A3%E3%81%A8%E9%81%85%E3%81%84%E3%81%91%E3%81%A9%E8%87%AA%E5%B7%B1%E7%B4%B9%E4%BB%8B%E3%81%A8%E3%81%93%E3%82%8C%E3%81%8B%E3%82%89/</guid>
      <description>はじめまして。
むーさんとここでは名乗ることにします。
いつかやろうと思っていたBlogをやっと始めました！ よろしくお願いします。
自己紹介のページは更新途中なんですけど、
ちょっと殴りがいてみますね。
今は28歳ほどで、訳あって現在無職ですｗ
元正社員のプログラマーでしたが今年退職しています。
前世は蟻だと思うほど甘いもの狂で、
自分でお菓子作りをちょいちょいしてます。
このブログの今後に関してですが、 今記事にしようかなと検討しているものは以下です！
すべて書くかはわからかないですが、ぜひご期待ください！！
 ブログ運営方法、1月ごとの収益 プログラマー向けの情報 ガジェット・家電レビュー  Mi band 5 食洗器 ティファール電気圧力鍋 etc&amp;hellip;   料理レシピ 一人暮らし向けの簡単レシピから作り置き、本格洋菓子などを今考えています。 アプリレビュー(最近よく使ってるもの)  CookPadMart 自転車アプリ etc    もちろんこの記事書いてほしいなどあれば是非コメントなどください！</description>
    </item>
    
    <item>
      <title>自炊だるいので青汁をぽちる</title>
      <link>https://shortbread2329.github.io/blog/p/%E8%87%AA%E7%82%8A%E3%81%A0%E3%82%8B%E3%81%84%E3%81%AE%E3%81%A7%E9%9D%92%E6%B1%81%E3%82%92%E3%81%BD%E3%81%A1%E3%82%8B/</link>
      <pubDate>Fri, 04 Jun 2021 13:29:06 +0900</pubDate>
      
      <guid>https://shortbread2329.github.io/blog/p/%E8%87%AA%E7%82%8A%E3%81%A0%E3%82%8B%E3%81%84%E3%81%AE%E3%81%A7%E9%9D%92%E6%B1%81%E3%82%92%E3%81%BD%E3%81%A1%E3%82%8B/</guid>
      <description>あー今日はなんだか自炊するのだるいなー
雨も降っていて買い物に行けないなー
この時期ってそんな気分にどうしてかなってしまいます。
でも栄養あるものとらないとなあどうしようかなあ・・・
と思っているとピンポンとともに、
「ヨドバシ電気でーす」と声が。
何ぽちったんだっけ・・・
私は国産素材の豆板醤を買うついでにどうやら、
ケール青汁を購入していたらしい。
昨日深夜の私は、何を考えていたのだろうか。
正直記憶にない。
2021-06-04-12-59-46-101
簡単に野菜取れないかなあと思って青汁を買うのはこれで3種類目ぐらいかなあ。
今まで買っていた2種類は大麦若葉が主成分で、
なんだかまずくはないけど味が無いかも？みたいな味で、 飲みやすく水に溶けやすいけど食物繊維が中心感があったので、
ビタミンだとかポリフェノールもとれるそうなこれを試しに。
早速お水に溶かしてみます。
2021-06-04-12-59-46-101
マドラーで混ぜたら10秒ほどで溶け切りました。
溶けやすさって粉末飲料では大事です！ 2021-06-04-12-59-46-101
そして気になるのは味ですよね！
では飲んでみます・・・
最初はやっぱり無味かなと感じたのですけど
後味がブロッコリーでした。
青汁はまずくもおいしくもないものが正直多いようなと思います。
それが少しマイブームでもありますｗ</description>
    </item>
    
    <item>
      <title>GitHubPage &#43; Hugo で最強ブログを作ろう(1/3)</title>
      <link>https://shortbread2329.github.io/blog/p/githubpage-hugo-%E3%81%A7%E6%9C%80%E5%BC%B7%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%861/3/</link>
      <pubDate>Wed, 02 Jun 2021 09:34:11 +0900</pubDate>
      
      <guid>https://shortbread2329.github.io/blog/p/githubpage-hugo-%E3%81%A7%E6%9C%80%E5%BC%B7%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%861/3/</guid>
      <description>あーブログ始めないとなあ
でもちゃんと作るとサーバー維持費用かかりそうだし、
簡単に作ると多くは広告をつけることができないし、
どうすればいいんだろうなあと考えていた時にいいやり方を見つけました！
今回のやり方であれば
独自ドメインのブログをgithub管理で運営できそうです。
ではさっそくやり方を記事にまとめます！
導入手順 前提の環境はWindows、gitとgoを事前にインストールしている状態です。
Hugoのインストールからブログ作成まで PowerShellを立ち上げます。
以下コマンドを実行してまずscoopをインストールします。
Set-ExecutionPolicy RemoteSigned iex (New-Object net.webclient).downloadstring(&amp;#39;https://get.scoop.sh&amp;#39;) このscoopはWindows用コマンドラインインストーラーです。 このインストーラーを使ってhugoとhugo-extendedをインストールします。
scoop install hugo scoop install hugo-extended Hugoとは ざっくりいうと、レイアウトがある程度整ったサイトをすぐに作れるやつです。
同じ用途のサービスとしてWordPressが有名かと思います。
違いは動的サイト、自由度の高いサイトがWordPressでできる点に対し、
Hugoは静的サイト、事前に作成したテンプレートデザインに従ったサイトができます。
例えばブログであればマークダウンファイルを配置しコマンドを実行すると公開用ファイルが生成されます。
本体 ├── 設定ファイル ├── マークダウンで書いた記事① └── 公開用ファイル③ コマンドを実行② Hugoのテンプレートデザイン https://themes.gohugo.io
今回はhugo-future-imperfect-slimを使用しています。
プロジェクト作成 ワークディレクトリにて以下のコマンドを実行するだけです。
hugo new site blog この時点でGithubの設定も行います。 先に、GitHub上で空のリポジトリ(ここでは blog)を作り、リモートURL登録をします。
$ cd blog $ git init $ git remote add origin https://github.com/shortBread2329/blog.git テーマをSubmoduleで登録 git submoduleコマンドを使うことで、外部のgitリポジトリを自分のgitリポジトリのサブディレクトリに登録できます。
このコマンドを使うことで、テンプレートデザインをダウンロードすることなく、githubから参照させることができます。
$ git submodule add https://github.</description>
    </item>
    
  </channel>
</rss>
